package bsm.prototype.dcl.latlon;

import static org.junit.Assert.*;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import bsm.dcl.config.dal.entities.DataDefinition;
import bsm.dcl.config.dal.entities.UnitDataDefinition;
import bsm.dcl.latlon.Decoder;
import bsm.dcl.messaging.Common;
import bsm.dcl.messaging.Impact;
import bsm.dcl.messaging.LocomotiveMonitoringUnit;
import bsm.dcl.messaging.MessageControl;
import bsm.dcl.messaging.SolarTrackingUnit;
import bsm.dcl.messaging.SensorRefrigiration;
import bsm.dcl.messaging.SpacialTracking;
import bsm.dcl.messaging.UnitMessage;

public class TestDecoder {

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}

	
	
	@SuppressWarnings("unchecked")
	@Test
	public final void testDecode() {
		
		//String decryptedMsg = "0300407C403E0000A122011B09B21A5634A304C2A6AE020000050DEE3E0100A482B6080700E6AB000000000016010B08001A09B21A14012B00010000A31211071B140C090906";
		//String decryptedMsg
		//String decryptedMsg ="280100170D0000606358052E01D659EE1B2901C902F501FD01A302030000003001B585403E0000A12D010059EE1B0000CB34A3043EA7AE020C16";
		//String decryptedMsg
		String decryptedMsg = "03002F35470900A11B010000000080F9370300F36F060000000000000031C220202121A30A0000000000000000002101001D7D2501380000FA02FF122602FF132602FF132602FF132602FF132602FE132602FE132602FE132602FE132602FE132602FE132602FE132602FE132602FD132602FD132602FD132601FC132601FC132601FB132601FB132600FB132600FB132600FA1326FFFA1316FFFA1216FFF91216FFF91216FFF91216FEF91216FEF91216FEF91216FDF81216FDF81216FDF81316FDF81316FDF81316FDF81416FDF81416FDF81416FDF81416FDF81416FEF91416FEF91416FEF91416FEF91416FEF91416FEFA1316FFFA1316FFFA1316FFFA1316FFFB1316FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0002FB010F020A2000202020100A";
		
		Decoder decrypter = new Decoder();	
		Map<String,DataDefinition> dataDefinitions = null;
		Map<String,UnitDataDefinition> unitDataDefinitions = null;
		try{		
			//--------------DeSerialize dataDefinition for unit test------------------------------------//
			InputStream file = new FileInputStream("C:/TEMP/dataDefinition.ser");
			InputStream buffer = new BufferedInputStream(file);
			ObjectInput input = new ObjectInputStream (buffer);
			dataDefinitions = (Map<String,DataDefinition>) input.readObject();
			input.close();
			
			InputStream file1 = new FileInputStream("C:/TEMP/unitDataDefinition.ser");
			InputStream buffer1 = new BufferedInputStream(file1);
			ObjectInput input1 = new ObjectInputStream(buffer1);
			unitDataDefinitions = (Map<String,UnitDataDefinition>) input1.readObject();
			input1.close();
			//-----------------------------------------------------------------------------------------//
		}
		catch(Exception e)
		{
			System.out.print(e.toString());
		}
		
		try{	
			// Get Data Dictionaries from DB
			decrypter.setDataDefinitions(dataDefinitions);
			decrypter.setUnitDataDefinitions(unitDataDefinitions);
			
			// Setup message structures for decoded data
			decrypter.messageControl = new MessageControl();
			decrypter.common = new Common();
			decrypter.messageLMU = new LocomotiveMonitoringUnit();
			decrypter.messageSTU = new SolarTrackingUnit();
			decrypter.sensorRf = new SensorRefrigiration();
			decrypter.spacial = new SpacialTracking();
			decrypter.impact = new Impact();
			SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");

			
			decrypter.setDateFormat(dateFormat);
			String network ="K";
			
			//decrypter.decodeTest(decryptedMsg, network );	
			
			// Check results
			//UnitMsg unitMsgOut = decrypter.getUnitMsg();
			//assertEquals(unitMsgOut.unitDttm, "2014-11-06 16:06:24.000");
			//assertEquals(unitMsgOut.latitude, "39.674578");
			//assertEquals(unitMsgOut.longitude, "-104.99915");
			//assertEquals(unitMsgOut.unitId, "A100003E4085B5");
			//assertEquals(unitMsgOut.course, "");
			
	System.out.print("done decoding");
			//assertEquals(messageLMUOut.msgId, "");

			
			
		}
		catch(Exception e)
		{
			System.out.print(e.toString());
			assertNull(e);
		}			
		
		
		
		
	}

}
