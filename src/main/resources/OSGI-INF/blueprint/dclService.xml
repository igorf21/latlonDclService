<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
 	   xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">


<cm:property-placeholder id="placeholder" persistent-id="latlon.database.sendmsg"
	placeholder-prefix="$(" placeholder-suffix=")">
    <cm:default-properties>
      <cm:property name="amq.username" value="admin"/>
      <cm:property name="amq.password" value="admin"/>
      <cm:property name="amq.url" value="discovery:(fabric:latlon)"/>
      <cm:property name="db.username" value="sa"/>
      <cm:property name="db.password" value="September00"/>
      <cm:property name="db.url" value="jdbc:sqlserver://localhost;databaseName=main_test2"/>
    </cm:default-properties>
  </cm:property-placeholder>
  
  <cm:property-placeholder id="SqlPropeties" persistent-id="sql.properties">
  	<cm:default-properties>
      <cm:property name="sql.selectMessage" value="Select TOP 1 * FROM MESSAGE_DECODER_QUEUE"/>
      <cm:property name="sql.deleteMessage" value="DELETE FROM MESSAGE_REPORT_v2 WHERE MESSAGE_ID \= \:\#MESSAGE_ID"/>
    </cm:default-properties>
  </cm:property-placeholder>
<!-- Imported OSGi services include the Transaction manager and JDBC DataSource -->
 <!--  
<reference id="LatLon-db" interface="javax.sql.DataSource" availability="mandatory" filter="(datasource.name=SQL_Src_LL)"/> 
  -->  

<!--*************** this is the JDBC data sources for development test ******************************************************-->

<bean id="LatLon-db" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
  <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
  <property name="url" value="$(db.url)"/>
  <property name="username" value="$(db.username)"/>
  <property name="password" value="$(db.password)"/>
</bean>

<!--*************************************************************************************************************************-->

  
<!-- configure the Camel SQL component to use the JDBC data source -->
<bean id="sqlSrc" class="org.apache.camel.component.sql.SqlComponent">
  <property name="dataSource" ref="LatLon-db"/>
</bean>


<!--*************** this is the JMS data source for AMQ *******************************************************-->
 
 
  
   <bean
    id="decrypter"
    class="bsm.prototype.dcl.latlon.Decrypter"
    activation="eager">
    <property name="deviceConfigService">
      <reference
        interface="bsm.dcl.config.dal.DeviceConfigService"
        availability="mandatory" />
    </property>
  </bean>
  
  <camelContext xmlns="http://camel.apache.org/schema/blueprint">
  <dataFormats>
    <json library="Jackson" id="jasonFormater" prettyPrint="true" include="NON_NULL"/>
  </dataFormats>
  <route id="LatLonDbToAMQ">
    <from uri="sqlSrc:{{sql.selectMessage}}?consumer.delay=500000" id="Select Raw Message">
      <description>New messages from LatLon Database using provided view</description>
    </from>
    <bean ref="decrypter" method="decryptMsg" id="Decryptor Bean"/>
    <log message="Decrypted Message is : ${body}" loggingLevel="INFO" id="Trace Decrypted Msg"/>
    <bean ref="decrypter" method="decodeMsg" id="Decoder Bean"/>
    <log message="Decoded Message is : ${body}" loggingLevel="INFO" id="Trace Decoded Msg"/>
    <marshal ref="jasonFormater" id="Format to JSON"/>
    <to uri="file:C:/temp"/>
    <log message="JSON Message is : ${body}" loggingLevel="INFO" id="Trace JSON Msg"/>
  </route>
</camelContext>

</blueprint>
